[user]
	name = Philip Dexter
	email = philip.dexter@gmail.com
[credential]
	helper = cache
[color]
	ui = true
[core]
	editor = vim
[github]
	user = philipdexter
[ghi]
	token = !cat ~/.ghi_token
[alias]
	fom = "!f() { git fetch origin $(git mainbranch) $@; }; f"
	fo = fetch origin
	mfh = merge FETCH_HEAD
	mfom = "!f() { git fom && git mfh; }; f"
	pom = "!f() { git push origin $(git mainbranch) $@; }; f"
	uaa = reset HEAD .
	ua = reset HEAD
	uma = checkout -- .
	um = checkout --
	l = log --pretty=format:"%C(auto)%h%d\\ %s\\ %C(red)[%C(green)%cn%C(red)]\\ %C(red)%ad%C(auto)" --decorate --date=relative --graph
	l5 = l -5
	la = l --all
	dl = l --numstat -1
	dld = log -u -1
	igrep = grep -Ii
	cp = cherry-pick
	ap = add -p
	camend = commit --amend
	cne = commit --amend --no-edit
	cm = commit -m
	c = commit
	cf = commit --fixup
	igrepcm = log -i --grep
	s = status -sb
	d = diff
	dc = diff --cached
	a = add
	au = add -u
	ai = add --intent-to-add
	p = push
	po = push origin
	ri = rebase -i
	riaa = rebase --autostash --autosquash -i
	riom = "!f() { git rebase -i origin/$(git mainbranch) $@; }; f"
	rioms = "!f() { git rebase -i origin/$(git mainbranch) --autostash --autosquash $@;}; f"
	frioms = "!f() { git fom && git rebase -i origin/$(git mainbranch) --autostash --autosquash $@;}; f"
	mk = checkout -b
	pob = "!f() { git push origin $(git branch | grep '^\\*' | cut -d' ' -f2) $@ ;}; f"
	pobu = pob -u
	pobd = "!f() { git push origin $(git branch | grep '^\\*' | cut -d' ' -f2) --dry-run $@ ;}; f"
	pobf = "!f() { git push origin $(git branch | grep '^\\*' | cut -d' ' -f2) $@ --force-with-lease ;}; f"
	pobfd = "!f() { git push origin $(git branch | grep '^\\*' | cut -d' ' -f2) --dry-run $@ --force-with-lease ;}; f"
	fob = "!f() { git fetch origin $(git branch | grep '^\\*' | cut -d' ' -f2) $@ ;}; f"
	co = checkout
	com = "!f() { git checkout $(git mainbranch); }; f"
	mainbranch = "!f() { git symbolic-ref refs/remotes/origin/HEAD $@ | sed 's@^refs/remotes/origin/@@'; }; f"
	dbranch = "!f() { git diff $(git merge-base master $1)..$1; }; f"
	dthisbranch = "!f() { branch=\"$(git branch | grep '^\\*' | cut -d' ' -f2)\" ; git dbranch $branch; }; f"
[commit]
	gpgsign = true
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
